{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Surya\\\\Documents\\\\mr_med_frontend\\\\components\\\\UploadPrescription\\\\UploadPrescriptions\\\\PresPopup\\\\index.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react'; // import stick from '/success.png';\n// import cancel from '/closee.png';\n\nimport styles from './PresPopup.module.scss';\nimport { Modal } from 'reactstrap';\nimport { useRouter } from 'next/router';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { Component } from 'react';\n\nvar PresPopup = /*#__PURE__*/function (_Component) {\n  _inherits(PresPopup, _Component);\n\n  var _super = _createSuper(PresPopup);\n\n  function PresPopup(props) {\n    var _this;\n\n    _classCallCheck(this, PresPopup);\n\n    _this.state = {\n      loc: props.router.query.loc,\n      loaded: false\n    };\n    return _possibleConstructorReturn(_this);\n  }\n\n  _createClass(PresPopup, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(\"sdfgsfghsfghfg\", this.props);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          modal = _this$props.modal,\n          toggle = _this$props.toggle;\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }\n      }, __jsx(Modal, {\n        isOpen: modal,\n        toggle: toggle,\n        className: styles.modals,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }\n      }, __jsx(\"div\", {\n        className: \"row \".concat(styles.order_MainContainer, \" d-flex justify-content-center\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }\n      }, __jsx(\"div\", {\n        className: styles.RegConfirmMain,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 16\n        }\n      }, __jsx(\"div\", {\n        className: \"\".concat(styles.contact_mr, \" d-flex justify-content-end\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 19\n        }\n      }), __jsx(\"div\", {\n        className: \"\".concat(styles.order_sec, \" d-flex justify-content-center\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 19\n        }\n      }, __jsx(\"img\", {\n        className: styles.orderSuccessImg,\n        src: \"/success.png\",\n        alt: \"success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 22\n        }\n      })), __jsx(\"div\", {\n        className: \"\".concat(styles.mr_med_lower, \" d-flex\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 19\n        }\n      }, __jsx(\"div\", {\n        className: styles.contact_text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 22\n        }\n      }, __jsx(\"p\", {\n        className: styles.mr_medcontact,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }\n      }, \"Thank You\"), __jsx(\"p\", {\n        className: styles.enrolling_section,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }\n      }, \"We will reach you soon\")), __jsx(\"div\", {\n        className: styles.explore_med,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 22\n        }\n      }))))));\n    }\n  }]);\n\n  return PresPopup;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    userDetail: state.auth.userDetails,\n    chooseMedicines: state.chooseMedicines,\n    prescription: state.prescription\n  };\n};\n\nexport default connect(mapStateToProps)(PresPopup);","map":{"version":3,"sources":["C:/Users/Surya/Documents/mr_med_frontend/components/UploadPrescription/UploadPrescriptions/PresPopup/index.js"],"names":["React","styles","Modal","useRouter","connect","axios","Component","PresPopup","props","state","loc","router","query","loaded","console","log","modal","toggle","modals","order_MainContainer","RegConfirmMain","contact_mr","order_sec","orderSuccessImg","mr_med_lower","contact_text","mr_medcontact","enrolling_section","explore_med","mapStateToProps","userDetail","auth","userDetails","chooseMedicines","prescription"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;;IAGMC,S;;;;;AACH,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAChB,UAAKC,KAAL,GAAa;AACXC,MAAAA,GAAG,EAAEF,KAAK,CAACG,MAAN,CAAaC,KAAb,CAAmBF,GADb;AAEXG,MAAAA,MAAM,EAAE;AAFG,KAAb;AADgB;AAKjB;;;;wCACkB;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B,KAAKP,KAAnC;AACF;;;6BAEQ;AAAA,wBACY,KAAKA,KADjB;AAAA,UACJQ,KADI,eACJA,KADI;AAAA,UACEC,MADF,eACEA,MADF;AAET,aACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,KAAD;AAAO,QAAA,MAAM,EAAED,KAAf;AAAsB,QAAA,MAAM,EAAEC,MAA9B;AAAsC,QAAA,SAAS,EAAEhB,MAAM,CAACiB,MAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,SAAS,gBAASjB,MAAM,CAACkB,mBAAhB,mCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG;AAAK,QAAA,SAAS,EAAElB,MAAM,CAACmB,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG;AAAK,QAAA,SAAS,YAAKnB,MAAM,CAACoB,UAAZ,gCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH,EAIG;AAAK,QAAA,SAAS,YAAKpB,MAAM,CAACqB,SAAZ,mCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG;AAAK,QAAA,SAAS,EAAErB,MAAM,CAACsB,eAAvB;AAAwC,QAAA,GAAG,EAAE,cAA7C;AAA6D,QAAA,GAAG,EAAC,SAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH,CAJH,EAOG;AAAK,QAAA,SAAS,YAAKtB,MAAM,CAACuB,YAAZ,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG;AAAK,QAAA,SAAS,EAAEvB,MAAM,CAACwB,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG;AAAG,QAAA,SAAS,EAAExB,MAAM,CAACyB,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADH,EAEG;AAAG,QAAA,SAAS,EAAEzB,MAAM,CAAC0B,iBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAFH,CADH,EAKG;AAAK,QAAA,SAAS,EAAE1B,MAAM,CAAC2B,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALH,CAPH,CADH,CADA,CADJ,CADL;AA0BF;;;;EAvCuBtB,S;;AA0CxB,IAAMuB,eAAe,GAAG,SAAlBA,eAAkB,CAAApB,KAAK;AAAA,SAAK;AAC/BqB,IAAAA,UAAU,EAAErB,KAAK,CAACsB,IAAN,CAAWC,WADQ;AAE/BC,IAAAA,eAAe,EAAExB,KAAK,CAACwB,eAFQ;AAG/BC,IAAAA,YAAY,EAAEzB,KAAK,CAACyB;AAHW,GAAL;AAAA,CAA7B;;AAMC,eAAe9B,OAAO,CAACyB,eAAD,CAAP,CAAyBtB,SAAzB,CAAf","sourcesContent":["import React from 'react'\r\n// import stick from '/success.png';\r\n// import cancel from '/closee.png';\r\nimport styles from './PresPopup.module.scss';\r\nimport { Modal } from 'reactstrap';\r\nimport {useRouter} from 'next/router';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { Component } from 'react';\r\n\r\n\r\nclass PresPopup extends Component {\r\n   constructor(props) {\r\n      this.state = {\r\n        loc: props.router.query.loc,\r\n        loaded: false\r\n      };\r\n    }\r\n   componentDidMount() {\r\n      console.log(\"sdfgsfghsfghfg\", this.props)\r\n   }\r\n   \r\n   render() {\r\n   let {modal,toggle} = this.props;\r\n   return (\r\n        <div>\r\n            <Modal isOpen={modal} toggle={toggle} className={styles.modals}>\r\n            <div className={`row ${styles.order_MainContainer} d-flex justify-content-center`}>\r\n               <div className={styles.RegConfirmMain}>\r\n                  <div className={`${styles.contact_mr} d-flex justify-content-end`}>\r\n                     {/* <img className={styles.cancelImg} onClick={toggle} src={\"/closee.png\"} alt=\"cancel\" /> */}\r\n                  </div>\r\n                  <div className={`${styles.order_sec} d-flex justify-content-center`}>\r\n                     <img className={styles.orderSuccessImg} src={\"/success.png\"} alt=\"success\" />\r\n                  </div>\r\n                  <div className={`${styles.mr_med_lower} d-flex`}>\r\n                     <div className={styles.contact_text}>\r\n                        <p className={styles.mr_medcontact}>Thank You</p>\r\n                        <p className={styles.enrolling_section}>We will reach you soon</p>\r\n                     </div>\r\n                     <div className={styles.explore_med}>\r\n                        {/* <button onClick={() => history.push('/ShopProductComponent')} className={styles.explore_medBtn}>Continue Shopping</button>\r\n                        <button onClick={() => history.push('/Accounts/Order')} className={styles.explore_medBtn}>My Orders</button> */}\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n         </Modal>\r\n        </div>\r\n    )\r\n}\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n   userDetail: state.auth.userDetails,\r\n   chooseMedicines: state.chooseMedicines,\r\n   prescription: state.prescription\r\n });\r\n \r\n export default connect(mapStateToProps)(PresPopup)\r\n"]},"metadata":{},"sourceType":"module"}