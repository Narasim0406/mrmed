{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport styles from './ChooseMedicine.module.scss';\nimport AttachedPrescriptions from '../Attached Prescriptions/index';\nimport CallPop from './CallPopup/index';\nimport { useRouter } from 'next/router';\nimport { connect, useDispatch, useSelector } from 'react-redux';\nimport { chooseMedicine } from '../../../actions';\n\nfunction ChooseMedicine(props) {\n  const {\n    0: choose,\n    1: setChoose\n  } = useState(1);\n  const {\n    0: modal,\n    1: setModal\n  } = useState(false);\n  const {\n    0: got,\n    1: setGot\n  } = useState(\"asperp\");\n  const router = useRouter();\n  const {\n    0: noDay,\n    1: handleChange\n  } = useState(\"\");\n  const dispatch = useDispatch();\n  const prescription = useSelector(state => state);\n\n  const handleChoose1 = () => {\n    setChoose(1);\n    setGot(\"asperp\");\n  };\n\n  const handleChoose2 = () => {\n    setChoose(2);\n    setGot(\"product\"); //router.push('/ShopProductComponent');\n  };\n\n  const handleChoose3 = async () => {\n    setChoose(3);\n    setGot(\"call\");\n    await dispatch(chooseMedicine(\"call\"));\n  };\n\n  const toggle = () => {\n    setModal(!modal);\n  };\n\n  const handleChangeNoDay = async e => {\n    handleChange(e.target.value);\n    await dispatch(chooseMedicine(e.target.value));\n    console.log(\"jkljasdlfkjasdf\", props);\n  };\n\n  const handleProd = () => {\n    router.push({\n      pathname: '/ShopProductComponent',\n      query: {\n        myCart: true\n      }\n    });\n  };\n\n  return __jsx(\"div\", {\n    className: \"App\"\n  }, __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: `col-md-6 Roboto ${styles.prescriptionHeader}`\n  }, \"2.Choose your Medicines Option\")), __jsx(\"div\", {\n    className: `row ${styles.boxContainer}`\n  }, __jsx(\"div\", {\n    className: `col-md-7 ${styles.prescriptionLeftBox}`\n  }, __jsx(\"div\", {\n    className: `col-md-12 ${styles.radioOption} mt-5`\n  }, __jsx(\"div\", {\n    className: styles.btn_radio\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    id: \"radio-label-1\",\n    className: styles.custom_radio,\n    name: \"pap\",\n    checked: choose === 1 ? true : false\n  }), __jsx(\"label\", {\n    onClick: handleChoose1,\n    htmlFor: \"radio-label-1\",\n    className: styles.radio_label\n  }), __jsx(\"span\", null, \"Order everything as per prescription\")), choose === 1 ? __jsx(\"div\", {\n    className: `col-md- 12 ${styles.selectOptionInnerForm}`\n  }, __jsx(\"label\", {\n    className: styles.dosageDurationLabel\n  }, \"Duration of dosage\"), __jsx(\"input\", {\n    value: noDay,\n    onChange: handleChangeNoDay,\n    type: \"text\",\n    id: \"dosage-input\",\n    name: \"dosage-duration\",\n    placeholder: \"Enter number of days\",\n    className: styles.dosageInputBox\n  })) : \"\", __jsx(\"div\", {\n    className: styles.btn_radio\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    id: \"radio-label-2\",\n    className: styles.custom_radio,\n    name: \"pap\"\n  }), __jsx(\"label\", {\n    onClick: handleChoose2,\n    htmlFor: \"radio-label-2\",\n    className: styles.radio_label\n  }), __jsx(\"span\", null, \"Search and add medicines\")), choose === 2 ? __jsx(\"div\", {\n    className: styles.searchMed\n  }, __jsx(\"span\", null, \"You will be directed to product page.\")) : \"\", __jsx(\"div\", {\n    className: styles.btn_radio\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    id: \"radio-label-3\",\n    className: styles.custom_radio,\n    name: \"pap\"\n  }), __jsx(\"label\", {\n    onClick: handleChoose3,\n    htmlFor: \"radio-label-3\",\n    className: styles.radio_label\n  }), __jsx(\"span\", null, \"Ask MrMed to call\"))), __jsx(\"div\", {\n    className: styles.prescriptionProceedButton\n  }, __jsx(\"button\", {\n    onClick: choose !== 2 ? props.handleStep : handleProd,\n    className: styles.proceedButton\n  }, \"PROCEED\"))), __jsx(\"div\", {\n    className: `col-md-5 ${styles.attaches}`\n  }, __jsx(AttachedPrescriptions, null)))), __jsx(CallPop, {\n    modal: modal,\n    toggle: toggle\n  }));\n}\n\nconst mapStateToProps = state => ({\n  post: state\n});\n\nexport default connect(mapStateToProps)(ChooseMedicine);","map":null,"metadata":{},"sourceType":"module"}