{"ast":null,"code":"import { combineReducers } from 'redux';\nimport * as types from './types';\nvar initialAuth = {\n  userDetails: {},\n  userToken: \"\",\n  cartProducts: []\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialAuth;\n\n  var _ref = arguments.length > 1 ? arguments[1] : undefined,\n      type = _ref.type,\n      payload = _ref.payload;\n\n  console.log(state.userDetails = payload, \"hjk\");\n\n  switch (type) {\n    case types.USER_DETAILS:\n      {\n        return {\n          userDetails: payload\n        };\n      }\n\n    case types.USER_TOKEN:\n      {\n        return {\n          userToken: payload\n        };\n      }\n\n    case types.CART_PRODUCTS:\n      {\n        return {\n          cartProducts: payload\n        };\n      }\n\n    default:\n      return state;\n  }\n}; // // COUNTER REDUCER\n// const counterReducer = (state = 0, { type }) => {\n//   switch (type) {\n//     case types.INCREMENT:\n//       return state + 1\n//     case types.DECREMENT:\n//       return state - 1\n//     case types.RESET:\n//       return 0\n//     default:\n//       return state\n//   }\n// }\n// // INITIAL TIMER STATE\n// const initialTimerState = {\n//   lastUpdate: 0,\n//   light: false,\n// }\n// // TIMER REDUCER\n// const timerReducer = (state = initialTimerState, { type, payload }) => {\n//   switch (type) {\n//     case types.TICK:\n//       return {\n//         lastUpdate: payload.ts,\n//         light: !!payload.light,\n//       }\n//     default:\n//       return state\n//   }\n// }\n// COMBINED REDUCERS\n\n\nvar reducers = {\n  // counter: counterReducer,\n  // timer: timerReducer,\n  auth: reducer\n};\nexport default combineReducers(reducers);","map":null,"metadata":{},"sourceType":"module"}