{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react'; // import delete1 from  '/delete1.png';\n// import view from '/view.png';\n// import download from '/download.png';\n// import tick from '/tickmark.png';\n\nimport SwiperCore, { Pagination, Scrollbar, A11y } from 'swiper';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport styles from './AttachedPrescription.module.scss';\nSwiperCore.use([Pagination, Scrollbar, A11y]);\nexport default function AttachedPrescription() {\n  const {\n    0: prescriptionsList,\n    1: setPrescriptionsList\n  } = useState([{\n    id: '1',\n    img: ''\n  }, {\n    id: '2',\n    img: ''\n  }]);\n  return __jsx(\"div\", null, __jsx(\"div\", {\n    className: `${styles.attachedPrescription} font-weight-bold`\n  }, __jsx(\"b\", null, \"Attached Prescription\")), __jsx(\"div\", {\n    className: styles.prescriptionRightBox\n  }, __jsx(Swiper, {\n    spaceBetween: 50,\n    slidesPerView: 1,\n    pagination: {\n      clickable: true\n    },\n    onSwiper: swiper => console.log(swiper),\n    onSlideChange: () => console.log('slide change')\n  }, prescriptionsList.map((prescriptions, ind) => {\n    return __jsx(SwiperSlide, null, __jsx(\"div\", {\n      className: styles.prescriptionAttachContainer\n    }, __jsx(\"div\", {\n      className: styles.attachedPrescription1\n    }, __jsx(\"div\", {\n      className: styles.prescriptionTickmark\n    }, __jsx(\"img\", {\n      src: '/tickmark.png',\n      alt: \"tickmark\"\n    })), __jsx(\"div\", {\n      className: styles.prescriptionImage\n    }, __jsx(\"img\", {\n      src: '/prescription-img.png',\n      alt: \"prescription\"\n    })), __jsx(\"div\", {\n      className: styles.iconsList\n    }, __jsx(\"img\", {\n      src: '/delete.png',\n      alt: \"prescription\"\n    }), __jsx(\"img\", {\n      src: '/ev.svg',\n      alt: \"prescription\"\n    }), __jsx(\"img\", {\n      src: '/download.png',\n      alt: \"prescription\"\n    })))));\n  }))));\n}","map":null,"metadata":{},"sourceType":"module"}