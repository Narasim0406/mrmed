{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport Image from '../SingleProduct/product/image/index';\nimport Details from '../SingleProduct/product/details/index';\nimport AddCart from '../SingleProduct/addCart/index';\nimport ProductSpecs from '../SingleProduct/productSpecs/index';\nimport AlternateBrand from '../SingleProduct/alternateBrand/index';\nimport RelatedProduct from '../SingleProduct/relatedProduct/index';\nimport styles from './SingleProductComponent.module.scss';\nimport { useRouter } from 'next/router';\nimport AddedCart from './AddedCart';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { profiles_url, orders_url, products_url } from '../../apiVariables';\n\nconst SingleProductComponent = props => {\n  const router = useRouter();\n  const myCart = router.query;\n  return __jsx(MyClass, _extends({}, props, {\n    router: router,\n    mycart: myCart\n  }));\n};\n\nclass MyClass extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"getCartList\", async () => {\n      let {\n        cartList\n      } = this.state;\n      let {\n        userDetail\n      } = this.props;\n      await axios.get(`${products_url}/cart?userId=${userDetail.userId}`).then(res => {\n        let obj = res.data;\n        cartList = res.data.data;\n        this.setState({\n          cartList\n        });\n        console.log(\"sdfgdhgfghdfhgdfj\", cartList); // this.props.dispatch(addressList)\n        // this.props.dispatch(productList(res.data.data.list))\n      });\n    });\n\n    _defineProperty(this, \"getCartDetail\", async () => {\n      let {\n        cartDetail\n      } = this.state;\n      let {\n        userDetail,\n        mycart\n      } = this.props;\n      let {\n        myCart,\n        id\n      } = mycart;\n      await axios.get(`${products_url}/cart/${id}`).then(res => {\n        let obj = res.data.data;\n        cartDetail.push(obj);\n        this.setState({\n          cartDetail\n        }); // this.props.dispatch(addressList)\n        // this.props.dispatch(productList(res.data.data.list))\n      });\n    });\n\n    this.state = {\n      cartList: [],\n      cartDetail: {}\n    };\n  }\n\n  componentDidMount() {\n    this.getCartList();\n    this.getCartDetail();\n  }\n\n  render() {\n    let {\n      mycart,\n      router\n    } = this.props;\n    let {\n      cartDetail,\n      cartList\n    } = this.state;\n    let {\n      myCart,\n      id\n    } = mycart;\n    return __jsx(\"div\", null, __jsx(\"div\", {\n      className: \"container\"\n    }, __jsx(\"div\", {\n      className: `col-md-12 ${styles.indication}`\n    }, __jsx(\"br\", null), __jsx(\"span\", {\n      onClick: () => router.push('/')\n    }, \"Home > \"), __jsx(\"span\", {\n      onClick: () => router.push('/ShopProductComponent')\n    }, \"All Products > \"), __jsx(\"span\", null, \"Product Details\"), __jsx(\"br\", null), __jsx(\"b\", null, \"Product Details\"), __jsx(\"hr\", null)), __jsx(\"div\", {\n      className: \"row\"\n    }, __jsx(\"div\", {\n      className: \"col-md-12\"\n    }, cartList && cartList.cartData && cartList.cartData.length > 0 ? __jsx(AddedCart, {\n      myCart: myCart,\n      cartList: cartList\n    }) : \"\"), __jsx(\"div\", {\n      className: \"col-md-5\"\n    }, __jsx(Image, null)), __jsx(\"div\", {\n      className: \"col-md-4\"\n    }, __jsx(Details, null)), __jsx(\"div\", {\n      className: \"col-md-3\"\n    }, __jsx(AddCart, {\n      myCart: myCart\n    }))), __jsx(\"div\", {\n      className: \"row\"\n    }, __jsx(\"div\", {\n      className: \"col-md-12\"\n    }, __jsx(ProductSpecs, null)))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  userDetail: state.auth.userDetails,\n  chooseMedicines: state.chooseMedicines,\n  prescription: state.prescription\n});\n\nexport default connect(mapStateToProps)(SingleProductComponent);","map":null,"metadata":{},"sourceType":"module"}