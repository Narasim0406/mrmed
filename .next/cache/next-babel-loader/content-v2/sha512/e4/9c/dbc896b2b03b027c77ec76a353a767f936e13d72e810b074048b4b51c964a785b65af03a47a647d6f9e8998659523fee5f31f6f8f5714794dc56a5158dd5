{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Surya\\\\Documents\\\\mr_med_frontend\\\\components\\\\UploadPrescription\\\\index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n// export {OrderSuccess} from './OrderSuccessFull/index';\n// export {Address} from './Address/index';\n// export {Payment} from './Payment/index';\n// //export {UploadPrescriptions} from './UploadPrescriptions/index';\nimport React, { useState } from 'react';\nimport Stepper from \"./Stepper/index\";\nimport styles from './StepperMain.module.scss';\nimport { useRouter } from 'next/router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uploadPrescriptions } from '../../actions';\nexport default function StepperMain() {\n  _s();\n\n  var _useState = useState(0),\n      currentStep = _useState[0],\n      setCurrentStep = _useState[1];\n\n  var router = useRouter();\n  var dispatch = useDispatch();\n  var prescription = useSelector(function (state) {\n    return state.prescription;\n  });\n\n  var handleClick = function handleClick(clickType) {\n    console.log(\"sdfgsdfsdfg\", clickType);\n    var newStep = currentStep;\n    clickType === \"next\" ? newStep++ : newStep--;\n\n    if (newStep > 0 && newStep <= 3) {\n      setCurrentStep(newStep);\n    }\n  };\n\n  var handleDispatch = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return dispatch(uploadPrescriptions(e.target.value));\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleDispatch(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 10\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-12 \".concat(styles.indication),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }\n  }), __jsx(\"span\", {\n    onClick: function onClick() {\n      return router.push('/');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }\n  }, \"Home >\"), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 70\n    }\n  }, \"Upload Prescription\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  }), __jsx(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }\n  }, \"Upload Prescription\"), __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }\n  }))), __jsx(\"div\", {\n    className: styles.stepperContainerHorizontal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, __jsx(Stepper, {\n    direction: \"Horizontal\",\n    currentStepNumber: currentStep,\n    steps: stepsArray,\n    stepColor: \"#6054E5\",\n    handleStepper: function handleStepper() {\n      return handleClick(\"next\");\n    },\n    dispatch: function dispatch(data) {\n      return handleDispatch(data);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    className: styles.buttonsContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, __jsx(\"button\", {\n    className: styles.prevBtn,\n    onClick: function onClick() {\n      return handleClick();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \"Previous\"), __jsx(\"button\", {\n    className: styles.nextBtn,\n    onClick: function onClick() {\n      return handleClick(\"next\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, \"Next\")));\n}\n\n_s(StepperMain, \"UD5aWruxjEE4pDJeylwsB2sSvFU=\", false, function () {\n  return [useRouter, useDispatch, useSelector];\n});\n\n_c = StepperMain;\nvar stepsArray = [// \"Create your account\",\n\"Upload Prescription\", \"Choose your medicine\", \"Address details\"];\n\nvar _c;\n\n$RefreshReg$(_c, \"StepperMain\");","map":{"version":3,"sources":["C:/Users/Surya/Documents/mr_med_frontend/components/UploadPrescription/index.js"],"names":["React","useState","Stepper","styles","useRouter","useDispatch","useSelector","uploadPrescriptions","StepperMain","currentStep","setCurrentStep","router","dispatch","prescription","state","handleClick","clickType","console","log","newStep","handleDispatch","data","e","target","value","indication","push","stepperContainerHorizontal","stepsArray","buttonsContainer","prevBtn","nextBtn"],"mappings":"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","sourcesContent":["// export {OrderSuccess} from './OrderSuccessFull/index';\r\n// export {Address} from './Address/index';\r\n// export {Payment} from './Payment/index';\r\n// //export {UploadPrescriptions} from './UploadPrescriptions/index';\r\nimport React, { useState } from 'react';\r\n\r\nimport Stepper from \"./Stepper/index\"; \r\nimport styles from './StepperMain.module.scss';\r\nimport {useRouter} from 'next/router';\r\nimport { useDispatch, useSelector} from 'react-redux';\r\nimport { uploadPrescriptions } from '../../actions';\r\n\r\nexport default function StepperMain(){\r\n   const [currentStep,setCurrentStep] = useState(0);\r\n   const router = useRouter();\r\n   const dispatch = useDispatch();\r\n   const prescription = useSelector((state) => state.prescription);\r\n  const handleClick = (clickType) => {\r\n    console.log(\"sdfgsdfsdfg\", clickType)\r\n    let newStep = currentStep;\r\n    clickType === \"next\" ? newStep++ : newStep--;\r\n\r\n    if (newStep > 0 && newStep <= 3) {\r\n      setCurrentStep(newStep);\r\n    }\r\n  }\r\n\r\n  const handleDispatch = async(data) => {\r\n    await dispatch(uploadPrescriptions(e.target.value))\r\n  }\r\n\r\n  return (\r\n      <div className=\"App\">\r\n         {/* <Address/> \r\n         <OrderCancellation/> \r\n         <Payment/>  */}\r\n         {/* <SwiperDemo/> */}\r\n         {/* <PaymentSuccess/> */}\r\n         <div className=\"container\">\r\n          <div className={`col-md-12 ${styles.indication}`}>\r\n              <br/>\r\n              <span onClick={() => router.push('/')}>Home &gt;</span><span>Upload Prescription</span>\r\n              <br/>\r\n              <b>Upload Prescription</b>\r\n              <hr/>\r\n            </div>\r\n         </div>\r\n          <div className={styles.stepperContainerHorizontal}>\r\n            <Stepper\r\n              direction=\"Horizontal\"\r\n              currentStepNumber={currentStep}\r\n              steps={stepsArray}\r\n              stepColor=\"#6054E5\"\r\n              handleStepper={() => handleClick(\"next\")}\r\n              dispatch={(data)=>handleDispatch(data)}\r\n            />\r\n          </div>\r\n  \r\n          <div className={styles.buttonsContainer}>\r\n            <button className={styles.prevBtn} onClick={() => handleClick()}>Previous</button>\r\n            <button className={styles.nextBtn} onClick={() => handleClick(\"next\")}>Next</button>\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\nconst stepsArray = [\r\n  // \"Create your account\",\r\n  \"Upload Prescription\",\r\n  \"Choose your medicine\",\r\n  \"Address details\"\r\n];\r\n\r\n"]},"metadata":{},"sourceType":"module"}