{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport AddressCard from '../AddressCard';\nimport styles from './AddressDetails.module.scss';\nimport { useRouter } from 'next/router';\nimport { Collapse, Button, CardBody, Card } from 'reactstrap';\nimport Link from 'next/link';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { profiles_url, orders_url } from '../../../../apiVariables';\n\nclass Address extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      addressType: 0,\n      modal: false,\n      addressList: [],\n      isOpen: false,\n      formField: {\n        name: \"\",\n        phoneNumber: \"\",\n        address: \"\",\n        city: \"\",\n        state: \"\",\n        pincode: \"\",\n        landmark: \"\"\n      },\n      selectedAddressindex: null,\n      selectedAddress: {}\n    });\n\n    _defineProperty(this, \"getAddress\", async () => {\n      let {\n        addressList\n      } = this.state;\n      let {\n        userDetail\n      } = this.props;\n      await axios.get(`${profiles_url}/address/user/${userDetail.userId}`).then(res => {\n        let obj = res.data.data;\n        addressList.push(obj);\n        this.setState({\n          addressList\n        }); // this.props.dispatch(addressList)\n        // this.props.dispatch(productList(res.data.data.list))\n      });\n    });\n\n    _defineProperty(this, \"handleAddAddress\", async () => {\n      let {\n        addressList,\n        formField,\n        addressType\n      } = this.state;\n      let {\n        userDetail\n      } = this.props;\n      let data = {\n        userId: userDetail.userId,\n        addressName: formField.name,\n        addressMobile: formField.phoneNumber,\n        address: formField.address,\n        city: formField.city,\n        state: formField.state,\n        pinCode: formField.pincode,\n        landMark: formField.landmark,\n        type: addressType\n      };\n      await axios.post(`${profiles_url}/address`, data).then(res => {\n        let obj = res.data.data;\n        addressList.push(obj);\n        formField = {\n          name: \"\",\n          phoneNumber: \"\",\n          address: \"\",\n          city: \"\",\n          state: \"\",\n          pincode: \"\",\n          landmark: \"\"\n        };\n        this.setState({\n          formField,\n          addressList\n        });\n        this.toggle1(); // this.props.dispatch(addressList)\n        // this.props.dispatch(productList(res.data.data.list))\n      });\n    });\n\n    _defineProperty(this, \"handleAddressType0\", () => {\n      this.setState({\n        addressType: 0\n      });\n    });\n\n    _defineProperty(this, \"handleAddressType1\", () => {\n      this.setState({\n        addressType: 1\n      });\n    });\n\n    _defineProperty(this, \"handleAddressType2\", () => {\n      this.setState({\n        addressType: 2\n      });\n    });\n\n    _defineProperty(this, \"toggle\", () => {\n      let {\n        modal\n      } = this.state;\n      modal = !modal;\n      this.setState({\n        modal\n      });\n    });\n\n    _defineProperty(this, \"toggle1\", () => {\n      let {\n        isOpen\n      } = this.state;\n      isOpen = !isOpen;\n      this.setState({\n        isOpen\n      });\n    });\n\n    _defineProperty(this, \"handleChange\", e => {\n      let {\n        formField\n      } = this.state;\n      formField[e.target.name] = e.target.value;\n      this.setState({\n        formField\n      });\n    });\n\n    _defineProperty(this, \"handleSelectAddress\", (index, address) => {\n      let {\n        selectedAddressindex,\n        selectedAddress\n      } = this.state;\n      selectedAddressindex = index;\n      selectedAddress = address[index];\n      console.log(\"sdfgghfhfgh\", index, address);\n      this.setState({\n        selectedAddressindex,\n        selectedAddress\n      });\n    });\n\n    _defineProperty(this, \"handlePlaceOrder\", async () => {\n      let {\n        addressList,\n        formField,\n        addressType,\n        selectedAddress\n      } = this.state;\n      let {\n        userDetail,\n        prescription,\n        chooseMedicines\n      } = this.props;\n      let prescriptionUrl = prescription.uploadPrescription.map((data, index) => data.url);\n      let data = {\n        \"prescriptionUrls\": prescriptionUrl,\n        \"dosageDuration\": Number(chooseMedicines.chooseMedicine),\n        \"address\": selectedAddress.address,\n        \"addressName\": selectedAddress.addressName,\n        \"addressMobile\": selectedAddress.addressMobile,\n        \"addressCity\": selectedAddress.city,\n        \"addressState\": selectedAddress.state,\n        \"addressPincode\": String(selectedAddress.pinCode),\n        \"addressLandmark\": selectedAddress.landMark,\n        \"addressType\": selectedAddress.type == 0 ? \"Home\" : selectedAddress.type == 1 ? \"Office\" : \"Other\",\n        \"adminStatus\": 0,\n        \"userStatus\": 0,\n        \"orderType\": 0,\n        \"items\": []\n      };\n      await axios.post(`${orders_url}/order`, data).then(res => {\n        this.props.handleSubmitedOrder(); // this.props.dispatch(addressList)\n        // this.props.dispatch(productList(res.data.data.list))\n      });\n    });\n\n    _defineProperty(this, \"handleSubmitCall\", async () => {\n      let {\n        addressList,\n        formField,\n        addressType,\n        selectedAddress\n      } = this.state;\n      let {\n        userDetail,\n        prescription,\n        chooseMedicines\n      } = this.props;\n      let prescriptionUrl = prescription.uploadPrescription.map((data, index) => data.url);\n      let data = {\n        \"prescriptionUrls\": prescriptionUrl,\n        \"address\": selectedAddress.address,\n        \"addressName\": selectedAddress.addressName,\n        \"addressMobile\": selectedAddress.addressMobile,\n        \"addressCity\": selectedAddress.city,\n        \"addressState\": selectedAddress.state,\n        \"addressPincode\": String(selectedAddress.pinCode),\n        \"addressLandmark\": selectedAddress.landMark,\n        \"addressType\": selectedAddress.type == 0 ? \"Home\" : selectedAddress.type == 1 ? \"Office\" : \"Other\",\n        \"adminStatus\": 0,\n        \"userStatus\": 0,\n        \"orderType\": 2,\n        \"items\": []\n      };\n      await axios.post(`${orders_url}/order`, data).then(res => {\n        this.props.handleSubmitedOrder(); // this.props.dispatch(addressList)\n        // this.props.dispatch(productList(res.data.data.list))\n      });\n    });\n  }\n\n  componentDidMount() {\n    console.log(this.props.userDetail, \"saasdfasdsgfs\");\n    this.getAddress();\n  }\n\n  render() {\n    let {\n      formField,\n      selectedAddressindex,\n      selectedAddress\n    } = this.state;\n    let {\n      name,\n      phoneNumber,\n      address,\n      city,\n      state,\n      pincode,\n      landmark,\n      addressType\n    } = formField;\n    return __jsx(\"div\", {\n      className: styles.addressDetails\n    }, __jsx(\"h2\", null, \"3.Address Details\"), __jsx(\"div\", {\n      className: \"container\"\n    }, __jsx(\"p\", null, \"Saved Addrss Details\"), __jsx(\"div\", {\n      className: `${styles.addressCards} col-md-12`\n    }, this.state.addressList.map((address, ind) => {\n      return __jsx(React.Fragment, null, __jsx(AddressCard, {\n        index: ind,\n        address: address,\n        selectedAddress: selectedAddressindex,\n        selectAddress: () => this.handleSelectAddress(ind, address)\n      }));\n    })), __jsx(\"div\", {\n      className: \"col\"\n    }, __jsx(\"div\", {\n      className: styles.addressItem\n    }, __jsx(\"div\", {\n      onClick: this.toggle1,\n      className: `${styles.deliverFlip} col-md-12`\n    }, __jsx(\"p\", null, \"Deliver to new address\"), __jsx(\"img\", {\n      src: '/down.png'\n    }))), __jsx(Collapse, {\n      className: styles.addForm,\n      isOpen: this.state.isOpen\n    }, __jsx(\"p\", null, \"Address Details\"), __jsx(\"div\", null, __jsx(\"div\", {\n      className: \"row\"\n    }, __jsx(\"div\", {\n      className: \"col-md-6 form-group mb-3\"\n    }, __jsx(\"label\", {\n      className: \"form-label\"\n    }, \"Name\"), __jsx(\"input\", {\n      onChange: this.handleChange,\n      type: \"name\",\n      value: name,\n      name: \"name\",\n      className: \"form-control\",\n      id: \"name\",\n      placeholder: \"Name\"\n    })), __jsx(\"div\", {\n      className: \"col-md-6 form-group mb-3\"\n    }, __jsx(\"label\", {\n      className: \"form-label\"\n    }, \"Phone Number\"), __jsx(\"input\", {\n      onChange: this.handleChange,\n      type: \"text\",\n      value: phoneNumber,\n      name: \"phoneNumber\",\n      className: \"form-control\",\n      id: \"phoneNumber\",\n      placeholder: \"Phone Number\"\n    }))), __jsx(\"div\", {\n      className: \"row\"\n    }, __jsx(\"div\", {\n      className: \"col-md-12 form-group mb-3\"\n    }, __jsx(\"label\", {\n      className: \"form-label\"\n    }, \"Address\"), __jsx(\"textarea\", {\n      onChange: this.handleChange,\n      value: address,\n      name: \"address\",\n      className: \"form-control\",\n      id: \"address\",\n      rows: \"3\"\n    }))), __jsx(\"div\", {\n      className: \"row\"\n    }, __jsx(\"div\", {\n      className: \"col-md-6 form-group mb-3\"\n    }, __jsx(\"label\", {\n      className: \"form-label\"\n    }, \"City\"), __jsx(\"input\", {\n      onChange: this.handleChange,\n      type: \"city\",\n      value: \"city\",\n      name: \"city\",\n      className: \"form-control\",\n      id: \"city\",\n      placeholder: \"Name\"\n    })), __jsx(\"div\", {\n      className: `col-md-6 form-group mb-3 ${styles.stateCol}`\n    }, __jsx(\"label\", {\n      className: \"form-label\"\n    }, \"State\"), __jsx(\"select\", {\n      onChange: this.handleChange,\n      className: styles.formSelect,\n      value: state,\n      name: \"state\",\n      id: \"state\"\n    }, __jsx(\"option\", {\n      selected: true\n    }, \"State\"), __jsx(\"option\", {\n      value: \"1\"\n    }, \"TamilNadu\"), __jsx(\"option\", {\n      value: \"2\"\n    }, \"Karnataka\"), __jsx(\"option\", {\n      value: \"3\"\n    }, \"Telungana\")))), __jsx(\"div\", {\n      className: \"row\"\n    }, __jsx(\"div\", {\n      className: \"col-md-6 form-group mb-3\"\n    }, __jsx(\"label\", {\n      className: \"form-label\"\n    }, \"Pin Code\"), __jsx(\"input\", {\n      onChange: this.handleChange,\n      type: \"text\",\n      value: pincode,\n      name: \"pincode\",\n      className: \"form-control\",\n      id: \"pincode\",\n      placeholder: \"Pin Code\"\n    })), __jsx(\"div\", {\n      className: \"col-md-6 form-group mb-3\"\n    }, __jsx(\"label\", {\n      className: \"form-label\"\n    }, \"Landmark\"), __jsx(\"input\", {\n      onChange: this.handleChange,\n      type: \"text\",\n      value: landmark,\n      name: \"landmark\",\n      className: \"form-control\",\n      id: \"landmark\",\n      placeholder: \"Landmark\"\n    }))), __jsx(\"div\", {\n      className: \"row\"\n    }, __jsx(\"div\", {\n      className: `btn-group col-md-12 form-group mb-3 mt-3 ${styles.place}`\n    }, __jsx(\"p\", null, \"Type of Place\"), __jsx(\"div\", null, __jsx(\"label\", {\n      className: `toggle-btn ${styles.toggleBtn} ${this.state.addressType === 0 ? styles.toggleBack : \"\"}`,\n      onClick: this.handleAddressType0\n    }, \"Home\"), __jsx(\"input\", {\n      type: \"radio\",\n      name: \"options\",\n      id: styles.option,\n      autoComplete: \"off\"\n    }), __jsx(\"label\", {\n      className: `toggle-btn ${styles.toggleBtn} ${this.state.addressType === 1 ? styles.toggleBack : \"\"}`,\n      onClick: this.handleAddressType1\n    }, \"Office\"), __jsx(\"input\", {\n      type: \"radio\",\n      name: \"options\",\n      id: styles.option,\n      autoComplete: \"off\"\n    }), __jsx(\"label\", {\n      className: `toggle-btn ${styles.toggleBtn} ${this.state.addressType === 2 ? styles.toggleBack : \"\"}`,\n      onClick: this.handleAddressType2\n    }, \"Other\"), __jsx(\"input\", {\n      type: \"radio\",\n      name: \"options\",\n      id: styles.option,\n      autoComplete: \"off\"\n    })))), __jsx(\"div\", {\n      className: \"row mt-3\"\n    }, __jsx(\"div\", {\n      className: \"col-md-5 form-group mb-3\"\n    }, __jsx(\"button\", {\n      onClick: this.handleAddAddress,\n      className: styles.save\n    }, \"Add Address\"))))), __jsx(\"div\", {\n      className: \"row mt-3\"\n    }, __jsx(\"div\", {\n      className: \"col-md-5 form-group mb-3\"\n    }, __jsx(\"button\", {\n      onClick: this.props.chooseMedicines.chooseMedicine === \"call\" ? this.handleSubmitCall : this.handlePlaceOrder,\n      className: styles.save\n    }, \"save & place order\"))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  userDetail: state.auth.userDetails,\n  chooseMedicines: state.chooseMedicines,\n  prescription: state.prescription\n});\n\nexport default connect(mapStateToProps)(Address);","map":null,"metadata":{},"sourceType":"module"}