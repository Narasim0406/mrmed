{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react'; //import SignIn from '../../Login/Signin';\n\nimport styles from './ImportedForm.module.scss';\nimport { useDispatch } from 'react-redux';\nimport { userDetails } from '../../../actions';\nimport { medplans_url } from '../../../apiVariables';\nimport axios from 'axios';\nimport jwt_decode from \"jwt-decode\";\nimport RegConfirm from '../RegConformation/index';\n\nfunction ImportedForm() {\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      modal = _useState[0],\n      setModal = _useState[1];\n\n  var _useState2 = useState({\n    userId: \"601cd4f10787cd421e6f6acc\",\n    medicineDetails: \"\",\n    quantity: \"\",\n    notes: \"\",\n    status: 0\n  }),\n      importedRegister = _useState2[0],\n      setImportedRegister = _useState2[1];\n\n  var _useState3 = useState([]),\n      prescriptionUrl = _useState3[0],\n      setPrescritpionUrl = _useState3[1];\n\n  var _useState4 = useState([]),\n      documentUrl = _useState4[0],\n      setDocumentUrl = _useState4[1];\n\n  var _useState5 = useState({}),\n      userData = _useState5[0],\n      setuserData = _useState5[1];\n\n  useEffect(function () {\n    if (localStorage.userData) {\n      dispatch(userDetails(JSON.parse(localStorage.userData)));\n      setuserData(JSON.parse(localStorage.userData));\n    }\n  }, []);\n\n  var uploadDocuments = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(documents) {\n      var url, docs, i, call;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              url = \"http://180.151.69.138:2258/api/v1/upload/uploadFile/single\";\n              console.log(documents, \"documents\");\n              docs = [];\n\n              if (!documents) {\n                _context2.next = 12;\n                break;\n              }\n\n              i = 0;\n\n            case 5:\n              if (!(i < documents.length)) {\n                _context2.next = 12;\n                break;\n              }\n\n              call = /*#__PURE__*/function () {\n                var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n                  var formData, file, res;\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          formData = new FormData();\n                          file = documents[i];\n                          formData.append(\"file\", file);\n                          _context.next = 5;\n                          return axios.post(url, formData, {\n                            headers: {\n                              \"Content-Type\": \"multipart/form-data\"\n                            }\n                          });\n\n                        case 5:\n                          res = _context.sent;\n\n                          if (res.status === 200) {\n                            console.log(res.data.data.url);\n                            docs.push(res.data.data.url);\n                          }\n\n                        case 7:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n\n                return function call() {\n                  return _ref2.apply(this, arguments);\n                };\n              }();\n\n              _context2.next = 9;\n              return call();\n\n            case 9:\n              i++;\n              _context2.next = 5;\n              break;\n\n            case 12:\n              return _context2.abrupt(\"return\", docs);\n\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function uploadDocuments(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(e) {\n      var medicineDetails, quantity, notes, prescriptionUrls, documentUrls, user, data, url, res;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              e.preventDefault();\n              medicineDetails = importedRegister.medicineDetails, quantity = importedRegister.quantity, notes = importedRegister.notes;\n              prescriptionUrls = uploadDocuments(prescriptionUrl);\n              documentUrls = uploadDocuments(documentUrl); //console.log({prescriptionUrls,documentUrls});\n\n              user = jwt_decode(userData.token);\n              data = {\n                userId: user && user.id,\n                userName: user && user.name,\n                medicineDetails: medicineDetails,\n                quantity: quantity,\n                notes: notes,\n                prescriptionUrls: prescriptionUrls,\n                documentUrls: documentUrls,\n                status: 0,\n                address: \"344B\",\n                addressName: \"bharathi\",\n                addressMobile: \"9290876754\",\n                addressCity: \"salem\",\n                addressState: \"tamilnadu\",\n                addressPincode: \"636010\",\n                addressLandmark: \"temple\",\n                addressType: \"home\"\n              };\n              url = \"\".concat(medplans_url, \"/import\");\n              _context3.next = 9;\n              return axios.post(url, data);\n\n            case 9:\n              res = _context3.sent;\n\n              if (res.status === 200) {\n                setImportedRegister({\n                  medicineDetails: \"\",\n                  quantity: \"\",\n                  notes: \"\",\n                  status: 0\n                });\n                setPrescritpionUrl([]);\n                setDocumentUrl([]);\n              }\n\n              toggle();\n\n            case 12:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function handleSubmit(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var toggle = function toggle() {\n    setModal(!modal);\n  };\n\n  var onChangeForm = function onChangeForm(e) {\n    var _e$target = e.target,\n        name = _e$target.name,\n        value = _e$target.value;\n    setImportedRegister(function (prevState) {\n      return _objectSpread(_objectSpread({}, prevState), {}, _defineProperty({}, name, value));\n    });\n  };\n\n  var handleDocument = function handleDocument(e) {\n    setDocumentUrl(e.target.files);\n  };\n\n  var handlePrescription = function handlePrescription(e) {\n    setPrescritpionUrl(e.target.files);\n  };\n\n  return __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-md-8\"\n  }, __jsx(\"div\", {\n    className: styles.formBorder\n  }, __jsx(\"div\", {\n    className: styles.provideDetail\n  }, __jsx(\"b\", null, \"Provide Details of Medicines\")), __jsx(\"form\", {\n    onSubmit: handleSubmit\n  }, __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-6\"\n  }, __jsx(\"div\", {\n    className: styles.medDetail\n  }, __jsx(\"span\", null, \"Medicine Details\")), __jsx(\"input\", {\n    className: styles.detailField,\n    type: \"text\",\n    name: \"medicineDetails\",\n    placeholder: \"Enter here\",\n    value: importedRegister.medicineDetails,\n    onChange: function onChange(e) {\n      return onChangeForm(e);\n    },\n    required: true\n  })), __jsx(\"div\", {\n    className: \"col-6\"\n  }, __jsx(\"div\", {\n    className: styles.medDetail\n  }, __jsx(\"span\", null, \"Quantity\")), __jsx(\"input\", {\n    className: styles.detailField,\n    type: \"text\",\n    name: \"quantity\",\n    placeholder: \"Enter here\",\n    value: importedRegister.quantity,\n    onChange: function onChange(e) {\n      return onChangeForm(e);\n    },\n    required: true\n  }))), __jsx(\"div\", {\n    className: styles.note\n  }, __jsx(\"span\", null, \"Notes\")), __jsx(\"textarea\", {\n    className: styles.notesField,\n    placeholder: \"Enter here\",\n    name: \"notes\",\n    value: importedRegister.notes,\n    onChange: function onChange(e) {\n      return onChangeForm(e);\n    },\n    required: true\n  }), __jsx(\"div\", {\n    className: styles.Label\n  }, __jsx(\"span\", null, \"Upload  Your Prescription\")), __jsx(\"div\", {\n    className: styles.uploadField\n  }, __jsx(\"img\", {\n    src: '/upload.png'\n  }), __jsx(\"br\", null), __jsx(\"span\", null, \"Upload prescription or photo here\"), __jsx(\"br\", null), __jsx(\"label\", {\n    className: styles.uploadLabel,\n    htmlFor: styles.uploadFile1\n  }, __jsx(\"b\", null, \"Browse files\")), __jsx(\"input\", {\n    type: \"file\",\n    id: styles.uploadFile1,\n    multiple: true,\n    onChange: function onChange(e) {\n      return handlePrescription(e);\n    }\n  })), __jsx(\"div\", {\n    className: styles.Label\n  }, __jsx(\"span\", null, \"Upload Documents\")), __jsx(\"div\", {\n    className: styles.uploadField\n  }, __jsx(\"img\", {\n    src: '/upload.png'\n  }), __jsx(\"br\", null), __jsx(\"span\", null, \"Upload any other related documents\"), __jsx(\"br\", null), __jsx(\"label\", {\n    className: styles.uploadLabel,\n    htmlFor: styles.uploadFile\n  }, __jsx(\"b\", null, \"Browse files\")), __jsx(\"input\", {\n    type: \"file\",\n    id: styles.uploadFile,\n    multiple: true,\n    onChange: function onChange(e) {\n      return handleDocument(e);\n    }\n  })), __jsx(\"div\", {\n    className: \"submit\"\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    className: styles.btnSubmit\n  }, __jsx(\"b\", null, \"SUBMIT YOUR REQUEST\")))))), __jsx(RegConfirm, {\n    modal: modal,\n    toggle: toggle\n  }));\n}\n\nexport default ImportedForm;","map":null,"metadata":{},"sourceType":"module"}