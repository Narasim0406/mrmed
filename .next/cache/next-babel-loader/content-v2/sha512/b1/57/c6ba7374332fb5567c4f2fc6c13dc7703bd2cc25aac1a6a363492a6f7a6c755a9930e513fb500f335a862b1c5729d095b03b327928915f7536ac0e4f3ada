{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState } from 'react';\nimport styles from './UploadPrescriptions.module.scss'; // import upload from '/upload.png';\n// import delete1 from '/delete1.png';\n// import view from '/view.png';\n// import download from '/download.png';\n// import tick from '/tickmark.png';\n// import bluetick from '/bluetick.png';\n\nimport { Component } from 'react';\nimport { products_url } from '../../../apiVariables';\nimport axios from 'axios';\nimport { LeakAddTwoTone } from '@material-ui/icons';\nimport { uploadPrescriptions } from '../../../actions';\n\nvar UploadPrescriptions = /*#__PURE__*/function (_Component) {\n  _inherits(UploadPrescriptions, _Component);\n\n  var _super = _createSuper(UploadPrescriptions);\n\n  function UploadPrescriptions() {\n    var _this;\n\n    _classCallCheck(this, UploadPrescriptions);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      uploadImages: []\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleFileUpload\", /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n        var uploadImages, formData, selectedFile;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                uploadImages = _this.state.uploadImages;\n                formData = new FormData();\n                selectedFile = e.target.files[0];\n                formData.append('file', selectedFile);\n                _context.next = 6;\n                return axios.post(\"\".concat(products_url, \"/upload/uploadFile/single\"), formData).then(function (res) {\n                  var obj = res.data.data;\n                  uploadImages.push(obj);\n\n                  _this.setState({\n                    uploadImages: uploadImages\n                  });\n\n                  _this.props.dispatch(uploadImages); // this.props.dispatch(productList(res.data.data.list))\n\n                });\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    return _this;\n  }\n\n  _createClass(UploadPrescriptions, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        uploadImages: []\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var uploadImages = this.state.uploadImages;\n      return __jsx(React.Fragment, null, __jsx(\"div\", {\n        className: \"container\"\n      }, __jsx(\"div\", {\n        className: \"row\"\n      }, __jsx(\"div\", {\n        className: \"col-md-12 \".concat(styles.uploadMainHead, \" d-flex\")\n      }, \"Upload Prescription\")), __jsx(\"div\", {\n        className: \"row \".concat(styles.uploadPresMainContainer)\n      }, __jsx(\"div\", {\n        className: \"col-md-8\"\n      }, __jsx(\"div\", {\n        className: \"\".concat(styles.uploadPresBox, \"  d-flex\")\n      }, __jsx(\"img\", {\n        src: \"/upload.png\",\n        alt: \"upload-image\",\n        className: styles.uploadImg\n      }), __jsx(\"p\", {\n        className: styles.diffDocs\n      }, \"Drag & Drop or Browse files to upload photo of your\", __jsx(\"br\", null), \" prescription (JPG, PDF, Doc, etc.)\"), __jsx(\"div\", null, __jsx(\"label\", {\n        className: styles.upload_label,\n        htmlFor: styles.upload_file\n      }, \"Browse Files\"), __jsx(\"input\", {\n        onChange: this.handleFileUpload,\n        type: \"file\",\n        id: styles.upload_file\n      }))), __jsx(\"div\", {\n        className: styles.prescripList\n      }, __jsx(\"p\", {\n        className: styles.prescripListtext\n      }, \"Upload Prescription\"), __jsx(\"div\", {\n        className: \"\".concat(styles.uploadprescripCards, \" d-flex\")\n      }, uploadImages.length > 0 ? uploadImages.map(function (item, index) {\n        return __jsx(\"div\", {\n          className: \"\".concat(styles.uploadprescripAttachContainer, \" d-flex justify-content-center align-items-center\")\n        }, __jsx(\"div\", {\n          className: \"\".concat(styles.uploadattachedPrescrip1, \" d-flex\")\n        }, __jsx(\"div\", {\n          className: styles.uploadprescripTickmark\n        }, __jsx(\"img\", {\n          src: \"/tickmark.png\",\n          alt: \"tickmark\"\n        })), __jsx(\"div\", {\n          className: styles.uploadprescripImg\n        }, __jsx(\"img\", {\n          src: item.url,\n          alt: \"prescription-img\"\n        })), __jsx(\"div\", {\n          className: \"\".concat(styles.uploadIconsList, \" d-flex align-items-center\")\n        }, __jsx(\"img\", {\n          src: \"/delete1.png\",\n          alt: \"delete-icon\"\n        }), __jsx(\"img\", {\n          src: \"/view.png\",\n          alt: \"view-icon\"\n        }), __jsx(\"img\", {\n          src: \"/download.png\",\n          alt: \"download-icon\"\n        }))));\n      }) : \"\"), __jsx(\"div\", {\n        className: styles.uploadPrescripProceed\n      }, __jsx(\"button\", {\n        onClick: function onClick() {\n          return _this2.props.handleStep('next');\n        },\n        className: styles.uploadproceedButton\n      }, \"CONTINUE\")))), __jsx(\"div\", {\n        className: \"col-md-4 \".concat(styles.uploadPresBoxright)\n      }, __jsx(\"p\", {\n        className: \"col-md-12 \".concat(styles.validPrescrip)\n      }, \"What is a valid prescription?\"), __jsx(\"img\", {\n        src: '/prescription-img.png',\n        className: \"col-md-12 \".concat(styles.validprescripImg),\n        alt: \"valid-prescription image\"\n      }), __jsx(\"div\", {\n        className: \"mt-4\"\n      }, __jsx(\"div\", {\n        className: \"col-md-12 \".concat(styles.validTextend1, \" d-flex\")\n      }, __jsx(\"img\", {\n        src: \"/bluetick.png\",\n        alt: \"bluetick-image\",\n        className: styles.blueTickImg\n      }), __jsx(\"p\", {\n        className: styles.validtextEnd\n      }, \"Patient Details\")), __jsx(\"div\", {\n        className: \"col-md-12 \".concat(styles.validTextend1, \" d-flex\")\n      }, __jsx(\"img\", {\n        src: \"/bluetick.png\",\n        alt: \"bluetick-image\",\n        className: styles.blueTickImg\n      }), __jsx(\"p\", {\n        className: styles.validtextEnd\n      }, \"Doctor\\u2019s Details\")), __jsx(\"div\", {\n        className: \"col-md-12 \".concat(styles.validTextend1, \" d-flex\")\n      }, __jsx(\"img\", {\n        src: '/bluetick.png',\n        alt: \"bluetick-image\",\n        className: styles.blueTickImg\n      }), __jsx(\"p\", {\n        className: styles.validtextEnd\n      }, \"Doctor\\u2019s Sign + Stamp\")), __jsx(\"div\", {\n        className: \"col-md-12 \".concat(styles.validTextend1, \" d-flex\")\n      }, __jsx(\"img\", {\n        src: '/bluetick.png',\n        alt: \"bluetick-image\",\n        className: styles.blueTickImg\n      }), __jsx(\"p\", {\n        className: styles.validtextEnd\n      }, \"Medicine Details\")))))));\n    }\n  }]);\n\n  return UploadPrescriptions;\n}(Component);\n\nexport default UploadPrescriptions;","map":null,"metadata":{},"sourceType":"module"}