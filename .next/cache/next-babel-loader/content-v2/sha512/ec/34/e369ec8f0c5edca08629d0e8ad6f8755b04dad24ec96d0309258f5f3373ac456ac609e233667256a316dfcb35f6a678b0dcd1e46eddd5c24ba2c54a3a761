{"ast":null,"code":"import { combineReducers } from 'redux';\nimport * as types from './types';\nvar initialAuth = {\n  userDetails: {},\n  userToken: \"\",\n  cartProduct: [],\n  products: []\n};\nvar initialPresc = {\n  uploadPrescription: [],\n  chooseMedicine: \"\"\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialAuth;\n\n  var _ref = arguments.length > 1 ? arguments[1] : undefined,\n      type = _ref.type,\n      payload = _ref.payload;\n\n  switch (type) {\n    case types.USER_DETAILS:\n      {\n        console.log(\"USER_DETAILS\", type, payload);\n        return {\n          userDetails: payload\n        };\n      }\n\n    case types.USER_TOKEN:\n      {\n        console.log(\"USER_TOKEN\", type, payload);\n        return {\n          userToken: payload\n        };\n      }\n\n    case types.CART_PRODUCTS:\n      {\n        console.log(\"CART_PRODUCTS\", type, payload);\n        return {\n          cartProduct: payload\n        };\n      }\n\n    case types.PRODUCT_LISTS:\n      {\n        console.log(\"PRODUCT_LISTS\", type, payload);\n        return {\n          products: payload\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nvar upload_prescription = function upload_prescription() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialPresc;\n\n  var _ref2 = arguments.length > 1 ? arguments[1] : undefined,\n      type = _ref2.type,\n      payload = _ref2.payload;\n\n  switch (type) {\n    case types.UPLOAD_PRESCRIPTION:\n      {\n        console.log(\"USER_DETAILS\", type, payload);\n        return {\n          uploadPrescription: payload\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nvar choose_medicine = function choose_medicine() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialPresc;\n\n  var _ref3 = arguments.length > 1 ? arguments[1] : undefined,\n      type = _ref3.type,\n      payload = _ref3.payload;\n\n  switch (type) {\n    case types.CHOOSE_MEDICINE:\n      {\n        console.log(\"USER_TOKEN\", type, payload);\n        return {\n          chooseMedicine: payload\n        };\n      }\n\n    default:\n      return state;\n  }\n}; // // COUNTER REDUCER\n// const counterReducer = (state = 0, { type }) => {\n//   switch (type) {\n//     case types.INCREMENT:\n//       return state + 1\n//     case types.DECREMENT:\n//       return state - 1\n//     case types.RESET:\n//       return 0\n//     default:\n//       return state\n//   }\n// }\n// // INITIAL TIMER STATE\n// const initialTimerState = {\n//   lastUpdate: 0,\n//   light: false,\n// }\n// // TIMER REDUCER\n// const timerReducer = (state = initialTimerState, { type, payload }) => {\n//   switch (type) {\n//     case types.TICK:\n//       return {\n//         lastUpdate: payload.ts,\n//         light: !!payload.light,\n//       }\n//     default:\n//       return state\n//   }\n// }\n// COMBINED REDUCERS\n\n\nvar reducers = {\n  // counter: counterReducer,\n  // timer: timerReducer,\n  auth: reducer,\n  prescription: upload_prescription,\n  chooseMedicines: choose_medicine\n};\nexport default combineReducers(reducers);","map":{"version":3,"sources":["C:/Users/Surya/Documents/mr_med_frontend/reducers.js"],"names":["combineReducers","types","initialAuth","userDetails","userToken","cartProduct","products","initialPresc","uploadPrescription","chooseMedicine","reducer","state","type","payload","USER_DETAILS","console","log","USER_TOKEN","CART_PRODUCTS","PRODUCT_LISTS","upload_prescription","UPLOAD_PRESCRIPTION","choose_medicine","CHOOSE_MEDICINE","reducers","auth","prescription","chooseMedicines"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,OAAO,KAAKC,KAAZ,MAAuB,SAAvB;AAEA,IAAMC,WAAW,GAAG;AAClBC,EAAAA,WAAW,EAAC,EADM;AAElBC,EAAAA,SAAS,EAAC,EAFQ;AAGlBC,EAAAA,WAAW,EAAC,EAHM;AAIlBC,EAAAA,QAAQ,EAAC;AAJS,CAApB;AAMA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,kBAAkB,EAAE,EADD;AAEnBC,EAAAA,cAAc,EAAE;AAFG,CAArB;;AAKA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAsC;AAAA,MAArCC,KAAqC,uEAA/BT,WAA+B;;AAAA;AAAA,MAAlBU,IAAkB,QAAlBA,IAAkB;AAAA,MAAbC,OAAa,QAAbA,OAAa;;AACpD,UAAQD,IAAR;AACE,SAAKX,KAAK,CAACa,YAAX;AAAwB;AACtBC,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BJ,IAA5B,EAAkCC,OAAlC;AACA,eAAO;AAACV,UAAAA,WAAW,EAACU;AAAb,SAAP;AACD;;AACD,SAAKZ,KAAK,CAACgB,UAAX;AAAsB;AACpBF,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BJ,IAA1B,EAAgCC,OAAhC;AACA,eAAO;AAACT,UAAAA,SAAS,EAACS;AAAX,SAAP;AACD;;AACD,SAAKZ,KAAK,CAACiB,aAAX;AAAyB;AACvBH,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BJ,IAA7B,EAAmCC,OAAnC;AACA,eAAO;AAACR,UAAAA,WAAW,EAACQ;AAAb,SAAP;AACD;;AACD,SAAKZ,KAAK,CAACkB,aAAX;AAAyB;AACvBJ,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BJ,IAA7B,EAAmCC,OAAnC;AACA,eAAO;AAACP,UAAAA,QAAQ,EAACO;AAAV,SAAP;AACD;;AACD;AACE,aAAOF,KAAP;AAlBJ;AAoBD,CArBD;;AAuBA,IAAMS,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAuC;AAAA,MAAtCT,KAAsC,uEAAhCJ,YAAgC;;AAAA;AAAA,MAAlBK,IAAkB,SAAlBA,IAAkB;AAAA,MAAbC,OAAa,SAAbA,OAAa;;AACjE,UAAQD,IAAR;AACE,SAAKX,KAAK,CAACoB,mBAAX;AAA+B;AAC7BN,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BJ,IAA5B,EAAkCC,OAAlC;AACA,eAAO;AAACL,UAAAA,kBAAkB,EAACK;AAApB,SAAP;AACD;;AACD;AACE,aAAOF,KAAP;AANJ;AAQD,CATD;;AAWA,IAAMW,eAAe,GAAG,SAAlBA,eAAkB,GAAuC;AAAA,MAAtCX,KAAsC,uEAAhCJ,YAAgC;;AAAA;AAAA,MAAlBK,IAAkB,SAAlBA,IAAkB;AAAA,MAAbC,OAAa,SAAbA,OAAa;;AAC7D,UAAQD,IAAR;AAEE,SAAKX,KAAK,CAACsB,eAAX;AAA2B;AACzBR,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BJ,IAA1B,EAAgCC,OAAhC;AACA,eAAO;AAACJ,UAAAA,cAAc,EAACI;AAAhB,SAAP;AACD;;AACD;AACE,aAAOF,KAAP;AAPJ;AASD,CAVD,C,CAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AACA,IAAMa,QAAQ,GAAG;AACf;AACA;AACAC,EAAAA,IAAI,EAACf,OAHU;AAIfgB,EAAAA,YAAY,EAACN,mBAJE;AAKfO,EAAAA,eAAe,EAACL;AALD,CAAjB;AAQA,eAAetB,eAAe,CAACwB,QAAD,CAA9B","sourcesContent":["import { combineReducers } from 'redux'\r\nimport * as types from './types'\r\n\r\nconst initialAuth = {\r\n  userDetails:{},\r\n  userToken:\"\",\r\n  cartProduct:[],\r\n  products:[]\r\n}\r\nconst initialPresc = {\r\n  uploadPrescription: [],\r\n  chooseMedicine: \"\"\r\n}\r\n\r\nconst reducer = (state=initialAuth,{type,payload}) => {\r\n  switch (type) {\r\n    case types.USER_DETAILS:{\r\n      console.log(\"USER_DETAILS\", type, payload)\r\n      return {userDetails:payload};\r\n    }\r\n    case types.USER_TOKEN:{\r\n      console.log(\"USER_TOKEN\", type, payload)\r\n      return {userToken:payload};\r\n    }\r\n    case types.CART_PRODUCTS:{\r\n      console.log(\"CART_PRODUCTS\", type, payload)\r\n      return {cartProduct:payload};\r\n    }\r\n    case types.PRODUCT_LISTS:{\r\n      console.log(\"PRODUCT_LISTS\", type, payload)\r\n      return {products:payload};\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst upload_prescription = (state=initialPresc,{type,payload}) => {\r\n  switch (type) {\r\n    case types.UPLOAD_PRESCRIPTION:{\r\n      console.log(\"USER_DETAILS\", type, payload)\r\n      return {uploadPrescription:payload};\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst choose_medicine = (state=initialPresc,{type,payload}) => {\r\n  switch (type) {\r\n   \r\n    case types.CHOOSE_MEDICINE:{\r\n      console.log(\"USER_TOKEN\", type, payload)\r\n      return {chooseMedicine:payload};\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n// // COUNTER REDUCER\r\n// const counterReducer = (state = 0, { type }) => {\r\n//   switch (type) {\r\n//     case types.INCREMENT:\r\n//       return state + 1\r\n//     case types.DECREMENT:\r\n//       return state - 1\r\n//     case types.RESET:\r\n//       return 0\r\n//     default:\r\n//       return state\r\n//   }\r\n// }\r\n\r\n// // INITIAL TIMER STATE\r\n// const initialTimerState = {\r\n//   lastUpdate: 0,\r\n//   light: false,\r\n// }\r\n\r\n// // TIMER REDUCER\r\n// const timerReducer = (state = initialTimerState, { type, payload }) => {\r\n//   switch (type) {\r\n//     case types.TICK:\r\n//       return {\r\n//         lastUpdate: payload.ts,\r\n//         light: !!payload.light,\r\n//       }\r\n//     default:\r\n//       return state\r\n//   }\r\n// }\r\n\r\n// COMBINED REDUCERS\r\nconst reducers = {\r\n  // counter: counterReducer,\r\n  // timer: timerReducer,\r\n  auth:reducer,\r\n  prescription:upload_prescription,\r\n  chooseMedicines:choose_medicine\r\n}\r\n\r\nexport default combineReducers(reducers)\r\n"]},"metadata":{},"sourceType":"module"}