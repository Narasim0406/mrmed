{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Surya\\\\Documents\\\\mr_med_frontend\\\\components\\\\UploadPrescription\\\\ChooseMedicine\\\\index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport styles from './ChooseMedicine.module.scss';\nimport AttachedPrescriptions from '../Attached Prescriptions/index';\nimport CallPop from './CallPopup/index';\nimport { useRouter } from 'next/router';\nimport { connect, useDispatch, useSelector } from 'react-redux';\nimport { chooseMedicine } from '../../../actions';\n\nfunction ChooseMedicine(props) {\n  _s();\n\n  var _useState = useState(1),\n      choose = _useState[0],\n      setChoose = _useState[1];\n\n  var _useState2 = useState(false),\n      modal = _useState2[0],\n      setModal = _useState2[1];\n\n  var _useState3 = useState(\"asperp\"),\n      got = _useState3[0],\n      setGot = _useState3[1];\n\n  var router = useRouter();\n\n  var _useState4 = useState(\"\"),\n      noDay = _useState4[0],\n      handleChange = _useState4[1];\n\n  var dispatch = useDispatch();\n  var prescription = useSelector(function (state) {\n    return state;\n  });\n\n  var handleChoose1 = function handleChoose1() {\n    setChoose(1);\n    setGot(\"asperp\");\n  };\n\n  var handleChoose2 = function handleChoose2() {\n    setChoose(2);\n    setGot(\"product\"); //router.push('/ShopProductComponent');\n  };\n\n  var handleChoose3 = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setChoose(3);\n              setGot(\"call\");\n              _context.next = 4;\n              return dispatch(chooseMedicine(\"call\"));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleChoose3() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var toggle = function toggle() {\n    setModal(!modal);\n  };\n\n  var handleChangeNoDay = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              handleChange(e.target.value);\n              _context2.next = 3;\n              return dispatch(chooseMedicine(e.target.value));\n\n            case 3:\n              console.log(\"jkljasdlfkjasdf\", props);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handleChangeNoDay(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleProd = function handleProd() {\n    router.push({\n      pathname: '/ShopProductComponent',\n      query: {\n        myCart: true\n      }\n    });\n  };\n\n  return __jsx(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-6 Roboto \".concat(styles.prescriptionHeader),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 25\n    }\n  }, \"2.Choose your Medicines Option\")), __jsx(\"div\", {\n    className: \"row \".concat(styles.boxContainer),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-7 \".concat(styles.prescriptionLeftBox),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-12 \".concat(styles.radioOption, \" mt-5\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 29\n    }\n  }, __jsx(\"div\", {\n    className: styles.btn_radio,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 29\n    }\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    id: \"radio-label-1\",\n    className: styles.custom_radio,\n    name: \"pap\",\n    checked: choose === 1 ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 33\n    }\n  }), __jsx(\"label\", {\n    onClick: handleChoose1,\n    htmlFor: \"radio-label-1\",\n    className: styles.radio_label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 33\n    }\n  }), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 33\n    }\n  }, \"Order everything as per prescription\")), choose === 1 ? __jsx(\"div\", {\n    className: \"col-md- 12 \".concat(styles.selectOptionInnerForm),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 33\n    }\n  }, __jsx(\"label\", {\n    className: styles.dosageDurationLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 37\n    }\n  }, \"Duration of dosage\"), __jsx(\"input\", {\n    value: noDay,\n    onChange: handleChangeNoDay,\n    type: \"text\",\n    id: \"dosage-input\",\n    name: \"dosage-duration\",\n    placeholder: \"Enter number of days\",\n    className: styles.dosageInputBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 37\n    }\n  })) : \"\", __jsx(\"div\", {\n    className: styles.btn_radio,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 29\n    }\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    id: \"radio-label-2\",\n    className: styles.custom_radio,\n    name: \"pap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 33\n    }\n  }), __jsx(\"label\", {\n    onClick: handleChoose2,\n    htmlFor: \"radio-label-2\",\n    className: styles.radio_label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 33\n    }\n  }), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 33\n    }\n  }, \"Search and add medicines\")), choose === 2 ? __jsx(\"div\", {\n    className: styles.searchMed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 33\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 37\n    }\n  }, \"You will be directed to product page.\")) : \"\", __jsx(\"div\", {\n    className: styles.btn_radio,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 29\n    }\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    id: \"radio-label-3\",\n    className: styles.custom_radio,\n    name: \"pap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 33\n    }\n  }), __jsx(\"label\", {\n    onClick: handleChoose3,\n    htmlFor: \"radio-label-3\",\n    className: styles.radio_label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 33\n    }\n  }), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 33\n    }\n  }, \"Ask MrMed to call\"))), __jsx(\"div\", {\n    className: styles.prescriptionProceedButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 29\n    }\n  }, __jsx(\"button\", {\n    onClick: choose !== 2 ? props.handleStep : handleProd,\n    className: styles.proceedButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 33\n    }\n  }, \"PROCEED\"))), __jsx(\"div\", {\n    className: \"col-md-5 \".concat(styles.attaches),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 25\n    }\n  }, __jsx(AttachedPrescriptions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 29\n    }\n  })))), __jsx(CallPop, {\n    modal: modal,\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }));\n}\n\n_s(ChooseMedicine, \"B28fuIW1vcZzuZbQ7MdXgyfc890=\", false, function () {\n  return [useRouter, useDispatch, useSelector];\n});\n\n_c = ChooseMedicine;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    post: state\n  };\n};\n\nexport default connect(mapStateToProps)(ChooseMedicine);\n\nvar _c;\n\n$RefreshReg$(_c, \"ChooseMedicine\");","map":{"version":3,"sources":["C:/Users/Surya/Documents/mr_med_frontend/components/UploadPrescription/ChooseMedicine/index.js"],"names":["React","useState","styles","AttachedPrescriptions","CallPop","useRouter","connect","useDispatch","useSelector","chooseMedicine","ChooseMedicine","props","choose","setChoose","modal","setModal","got","setGot","router","noDay","handleChange","dispatch","prescription","state","handleChoose1","handleChoose2","handleChoose3","toggle","handleChangeNoDay","e","target","value","console","log","handleProd","push","pathname","query","myCart","prescriptionHeader","boxContainer","prescriptionLeftBox","radioOption","btn_radio","custom_radio","radio_label","selectOptionInnerForm","dosageDurationLabel","dosageInputBox","searchMed","prescriptionProceedButton","handleStep","proceedButton","attaches","mapStateToProps","post"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport styles from './ChooseMedicine.module.scss';\r\nimport AttachedPrescriptions from '../Attached Prescriptions/index';\r\nimport CallPop from './CallPopup/index';\r\nimport {useRouter} from 'next/router';\r\nimport { connect, useDispatch, useSelector} from 'react-redux';\r\nimport { chooseMedicine } from '../../../actions';\r\n\r\nfunction ChooseMedicine(props){\r\n    const [choose,setChoose] = useState(1);\r\n    const [modal,setModal] = useState(false);\r\n    const [got,setGot] = useState(\"asperp\");\r\n    const router = useRouter();\r\n    const [noDay, handleChange] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n    const prescription = useSelector((state) => state);\r\n    const handleChoose1 = () => {\r\n        setChoose(1);\r\n        setGot(\"asperp\");\r\n    }\r\n    const handleChoose2 = () => {\r\n        setChoose(2);\r\n        setGot(\"product\");\r\n        //router.push('/ShopProductComponent');\r\n    }\r\n    const handleChoose3 = async() => {\r\n        setChoose(3);\r\n        setGot(\"call\");\r\n        await dispatch(chooseMedicine(\"call\"))\r\n    }\r\n    const toggle = () => {\r\n        setModal(!modal);\r\n    }\r\n    const handleChangeNoDay = async(e) => {\r\n        handleChange(e.target.value)\r\n        await dispatch(chooseMedicine(e.target.value))\r\n        console.log(\"jkljasdlfkjasdf\", props)\r\n    }\r\n    const handleProd = () => {\r\n        router.push({pathname:'/ShopProductComponent',query:{myCart:true}});\r\n    }\r\n    return (\r\n            <div className=\"App\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className={`col-md-6 Roboto ${styles.prescriptionHeader}`}>\r\n                            2.Choose your Medicines Option\r\n                        </div>\r\n                    </div>\r\n                    <div className={`row ${styles.boxContainer}`}>\r\n                        <div className={`col-md-7 ${styles.prescriptionLeftBox}`}>\r\n                            <div className={`col-md-12 ${styles.radioOption} mt-5`}>\r\n                            <div className={styles.btn_radio}>\r\n                                <input type=\"radio\" id=\"radio-label-1\" className={styles.custom_radio} name=\"pap\" checked={choose===1 ? true:false}/>\r\n                                <label onClick={handleChoose1} htmlFor=\"radio-label-1\" className={styles.radio_label}></label>\r\n                                <span>Order everything as per prescription</span>\r\n                            </div>\r\n                            { choose === 1 ?\r\n                                <div className={`col-md- 12 ${styles.selectOptionInnerForm}`}>\r\n                                    <label className={styles.dosageDurationLabel}>Duration of dosage</label>\r\n                                    <input value={noDay} onChange={handleChangeNoDay} type='text' id='dosage-input' name='dosage-duration' placeholder=\"Enter number of days\" className={styles.dosageInputBox} />\r\n                                </div> : \"\"\r\n                            }\r\n                            <div className={styles.btn_radio}>\r\n                                <input type=\"radio\" id=\"radio-label-2\" className={styles.custom_radio} name=\"pap\" />\r\n                                <label onClick={handleChoose2} htmlFor=\"radio-label-2\" className={styles.radio_label}></label>\r\n                                <span>Search and add medicines</span>\r\n                            </div>\r\n                            {\r\n                                choose === 2 ? \r\n                                <div className={styles.searchMed}>\r\n                                    <span>You will be directed to product page.</span>\r\n                                </div> : \"\"\r\n                            }\r\n                            <div className={styles.btn_radio}>\r\n                                <input type=\"radio\" id=\"radio-label-3\" className={styles.custom_radio} name=\"pap\" />\r\n                                <label onClick={handleChoose3} htmlFor=\"radio-label-3\" className={styles.radio_label}></label>\r\n                                <span>Ask MrMed to call</span>\r\n                            </div>\r\n                            {\r\n                                //choose === 3 ?\r\n                                // <div className={`row ${styles.callForm}`}>\r\n                                //     <div className=\"col-md-6\">\r\n                                //         <div className={styles.profileField}>\r\n                                //             <span>Full Name</span>\r\n                                //         </div>\r\n                                //         <input className={styles.profileInput} type=\"text\" placeholder=\"Enter Name\" />\r\n                                //     </div>\r\n                                //     <div className=\"col-md-6\">\r\n                                //         <div className={styles.profileField}>\r\n                                //             <span>Mobile Number</span>\r\n                                //         </div>\r\n                                //         <input className={styles.profileInput} type=\"text\" placeholder=\"Enter Number\" />\r\n                                //     </div>\r\n                                //     <div className=\"col-md-12\">\r\n                                //         <div className={styles.profileField}>\r\n                                //             <span>Reason</span>\r\n                                //         </div>\r\n                                //         <textarea className={styles.profileTextarea} placeholder=\"Enter the Reason\" />\r\n                                //     </div>\r\n                                // </div> :\"\"\r\n                            }\r\n                            </div>\r\n                            <div className={styles.prescriptionProceedButton}>\r\n                                <button onClick={choose !== 2 ? props.handleStep : handleProd} className={styles.proceedButton}>PROCEED</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className={`col-md-5 ${styles.attaches}`}>\r\n                            <AttachedPrescriptions/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <CallPop modal={modal} toggle={toggle}/>\r\n            </div>\r\n        )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    post: state\r\n});\r\n\r\nexport default connect(mapStateToProps)(ChooseMedicine)"]},"metadata":{},"sourceType":"module"}