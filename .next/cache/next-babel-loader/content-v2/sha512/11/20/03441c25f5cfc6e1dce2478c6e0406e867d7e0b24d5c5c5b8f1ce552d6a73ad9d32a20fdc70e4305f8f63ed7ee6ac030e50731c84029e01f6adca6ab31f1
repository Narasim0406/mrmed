{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react'; // import OrderSummary from '../orderSummary/index'\n\nimport { products_url } from '../../../apiVariables';\nimport axios from 'axios';\nimport { productList, cartProduct, userDetails } from '../../../actions';\nimport styles from './AllProduct.module.scss';\n\nclass Detail extends React.Component {\n  constructor() {\n    super();\n\n    _defineProperty(this, \"componentDidMount\", async () => {\n      if (localStorage.userData) {\n        await this.props.dispatch(userDetails(JSON.parse(localStorage.userData))); // setuserData(JSON.parse(localStorage.userData))\n      }\n\n      console.log(\"sdfsdfgsdfg\", this.props);\n      this.fetchProducts();\n      this.fetchCart();\n    });\n\n    _defineProperty(this, \"fetchProducts\", async () => {\n      await axios.get(`${products_url}/product/allProducts?page=1&size=10&specialityProduct=&conditionProduct=`).then(res => {\n        this.setState({\n          products: res.data.data.list\n        }); // this.props.dispatch(productList(res.data.data.list))\n      });\n    });\n\n    _defineProperty(this, \"fetchCart\", async () => {\n      let {\n        userDetails\n      } = this.props.userDetail; //let userId = \"601cd4f10787cd421e6f6acc\";\n\n      console.log(userDetails, \"get cart dsfgsdfgsdfg\");\n      const api = `http://180.151.69.138:2258/api/v1/cart?userId=${userDetails.userId}`;\n      await axios.get(api).then(res => {\n        this.props.dispatch(cartProduct(res.data.data.cartData));\n        this.setState({\n          cartData: res.data.data.cartData\n        });\n      });\n    });\n\n    _defineProperty(this, \"flows\", () => {\n      if (this.props.myCart) {\n        this.props.router.push({\n          pathname: '/SingleProduct',\n          query: {\n            myCart: true\n          }\n        });\n      } else {\n        this.props.router.push({\n          pathname: '/SingleProduct',\n          query: {\n            myCart: false\n          }\n        });\n      }\n    });\n\n    _defineProperty(this, \"addToCart\", async product => {\n      let {\n        userDetails\n      } = this.props.userDetail;\n      console.log(this.props, \"add cart dsfgsdfgsdfg\");\n      let data = {\n        userId: userDetails.userId,\n        productId: product._id,\n        quantity: 1\n      };\n      const url = `${products_url}/cart`;\n      let res = await axios.post(url, data);\n\n      if (res.status === 200) {\n        console.log(res);\n        this.fetchCart();\n        let cartIndexes = await this.state.cartData.map(prod => {\n          return prod.productId === product._id ? product._id : -1;\n        });\n        console.log(cartIndexes);\n        this.setState({\n          cartIndexes: cartIndexes\n        });\n      }\n    });\n\n    this.state = {\n      products: [],\n      cartData: [],\n      cartIndexes: []\n    };\n  }\n\n  render() {\n    let {\n      cartProducts,\n      cartDetails\n    } = this.state;\n    return __jsx(\"div\", {\n      className: \"row\"\n    }, __jsx(\"div\", {\n      className: \"col-md-12\"\n    }, __jsx(\"div\", {\n      className: \"row\"\n    }, __jsx(\"div\", {\n      className: `col-md-6 ${styles.menu}`\n    }, __jsx(\"img\", {\n      src: '/menu.png'\n    }), __jsx(\"img\", {\n      src: '/list.png'\n    }))), __jsx(\"div\", {\n      className: \"row\"\n    }, this.state.products.map((product, index) => {\n      var _this$state$cartIndex;\n\n      let {\n        id,\n        medicineName,\n        manufacturer,\n        price,\n        discountPrice,\n        PAP,\n        discountPercentage\n      } = product;\n      let myCart = this.props.myCart;\n      return __jsx(\"div\", {\n        className: \"col-md-4\",\n        key: index\n      }, __jsx(\"div\", {\n        className: styles.bottom\n      }, __jsx(\"div\", {\n        className: styles.image,\n        onClick: () => this.flows()\n      }, __jsx(\"div\", {\n        className: styles.offerBadge\n      }, __jsx(\"b\", null, discountPercentage, \"%\")), __jsx(\"img\", {\n        src: '/product-3.png'\n      })), __jsx(\"div\", {\n        className: styles.category\n      }, __jsx(\"span\", null, \"Diabetes\"), __jsx(\"div\", {\n        className: styles.right\n      }, __jsx(\"span\", null, product.packingSize))), __jsx(\"b\", {\n        className: styles.name\n      }, medicineName), PAP && __jsx(\"img\", {\n        className: styles.prescriptionImg,\n        src: '/prescription.png'\n      }), __jsx(\"br\", null), __jsx(\"span\", {\n        className: styles.company\n      }, \"Manufacturer: \", manufacturer), __jsx(\"hr\", null), __jsx(\"b\", {\n        className: styles.discountPrice\n      }, \"\\u20B9 \", (price - discountPrice).toFixed(2)), __jsx(\"span\", {\n        className: styles.actualPrice\n      }, \"MRP \\u20B9 \", price), __jsx(\"div\", {\n        className: styles.right\n      }, (_this$state$cartIndex = this.state.cartIndexes) !== null && _this$state$cartIndex !== void 0 && _this$state$cartIndex.includes(id) ? __jsx(\"button\", {\n        key: id,\n        className: styles.btnAdded\n      }, \"\\u2713\") : __jsx(\"button\", {\n        key: id,\n        onClick: () => this.addToCart(product),\n        className: styles.btnAdd\n      }, \"+\"))));\n    }))));\n  }\n\n}\n\nexport default Detail;","map":null,"metadata":{},"sourceType":"module"}