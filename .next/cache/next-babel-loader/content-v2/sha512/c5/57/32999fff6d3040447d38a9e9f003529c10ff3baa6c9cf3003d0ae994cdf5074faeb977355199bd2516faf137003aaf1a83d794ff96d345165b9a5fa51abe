{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useRouter } from 'next/router';\nimport { useSelector } from 'react-redux';\nimport { products_url, profiles_url } from '../../../apiVariables';\nimport styles from './AllProduct.module.scss';\n\nfunction AllProduct() {\n  var _useState = useState(['Diabetes (12)', 'Eye Care (16)', 'Baby Care (28)', 'Mind Care (12)', 'Kidney Care (15)', 'Stomach Care (18)', 'Immunity Booster (4)', 'Respiratory Care (12)']),\n      categories = _useState[0],\n      setCategories = _useState[1];\n\n  var _useState2 = useState(['Organic India (3)', 'Smart Air Fileters (4)', 'Venus (3)', 'Ansell (3)', 'Cipla (2)', 'Phzer (2)', 'BYD (6)', 'Beurer (2)']),\n      brands = _useState2[0],\n      setBrands = _useState2[1];\n\n  var _useState3 = useState(['Less than 10%', '10% and above', '20% and above', '30% and above']),\n      discount = _useState3[0],\n      setDiscount = _useState3[1];\n\n  var _useState4 = useState(['5mg', '10mg', '100g', '200g', '500g', '1000g']),\n      capacity = _useState4[0],\n      setCapacity = _useState4[1];\n\n  var _useState5 = useState([]),\n      products = _useState5[0],\n      setProducts = _useState5[1];\n\n  var _useState6 = useState([]),\n      cartList = _useState6[0],\n      setCartList = _useState6[1];\n\n  var router = useRouter();\n  var userDetails = useSelector(function (state) {\n    return state.auth;\n  });\n  useEffect(function () {\n    function fetchProducts() {\n      return _fetchProducts.apply(this, arguments);\n    }\n\n    function _fetchProducts() {\n      _fetchProducts = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get(\"\".concat(products_url, \"/product\")).then(function (res) {\n                  setProducts(res.data.data.list);\n                  console.log(products);\n                });\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _fetchProducts.apply(this, arguments);\n    }\n\n    fetchProducts();\n  }, []);\n\n  var addToCart = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(product) {\n      var data, url, res;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              product.addedToCart = true;\n              data = {\n                userId: userDetails.userDetails.id,\n                productId: product._id,\n                quantity: product.quantity,\n                original_price: product.original_price,\n                discount_price: product.discount_price\n              };\n              url = \"\".concat(profiles_url, \"/cart\");\n              _context2.next = 5;\n              return httpPostRequest(url, data);\n\n            case 5:\n              res = _context2.sent;\n              console.log(res);\n\n              if (res.status === 200) {\n                alert(res.message);\n              }\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function addToCart(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var httpPostRequest = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(url, body) {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              console.log(body);\n              _context3.next = 3;\n              return fetch(url, {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(body)\n              });\n\n            case 3:\n              result = _context3.sent;\n              _context3.next = 6;\n              return result;\n\n            case 6:\n              return _context3.abrupt(\"return\", _context3.sent);\n\n            case 7:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function httpPostRequest(_x2, _x3) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-md-12\"\n  }, __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-md-6 \".concat(styles.menu)\n  }, __jsx(\"img\", {\n    src: require('../../../assets/images/menu.png')\n  }), __jsx(\"img\", {\n    src: require('../../../assets/images/list.png')\n  })), __jsx(\"div\", {\n    className: \"col-md-6\"\n  }, __jsx(\"div\", {\n    className: styles.sortDropdown\n  }, __jsx(\"select\", null, __jsx(\"option\", null, \"Sorting By Popularity\"))))), __jsx(\"div\", {\n    className: \"row\"\n  }, products.map(function (product, index) {\n    var id = product.id,\n        medicineName = product.medicineName,\n        manufacturer = product.manufacturer,\n        price = product.price,\n        discountPrice = product.discountPrice,\n        PAP = product.PAP,\n        discountPercentage = product.discountPercentage,\n        _product$addedToCart = product.addedToCart,\n        addedToCart = _product$addedToCart === void 0 ? false : _product$addedToCart;\n    return __jsx(\"div\", {\n      className: \"col-md-4\",\n      key: index\n    }, __jsx(\"div\", {\n      className: styles.bottom\n    }, __jsx(\"div\", {\n      className: styles.image,\n      onClick: function onClick() {\n        return router.push('/SingleProduct');\n      }\n    }, __jsx(\"div\", {\n      className: styles.offerBadge\n    }, __jsx(\"b\", null, discountPercentage, \"%\")), __jsx(\"img\", {\n      src: require('../../../assets/images/product-3.png')\n    })), __jsx(\"div\", {\n      className: styles.category\n    }, __jsx(\"span\", null, \"Diabetes\"), __jsx(\"div\", {\n      className: styles.right\n    }, __jsx(\"span\", null, \"1\"))), __jsx(\"b\", {\n      className: styles.name\n    }, medicineName), PAP && __jsx(\"img\", {\n      className: styles.prescriptionImg,\n      src: require('../../../assets/images/prescription.png')\n    }), __jsx(\"br\", null), __jsx(\"span\", {\n      className: styles.company\n    }, \"Manufacturer: \", manufacturer), __jsx(\"hr\", null), __jsx(\"b\", {\n      className: styles.discountPrice\n    }, \"\\u20B9 \", (price - discountPrice).toFixed(2)), __jsx(\"span\", {\n      className: styles.actualPrice\n    }, \"MRP \\u20B9 \", price), __jsx(\"div\", {\n      className: styles.right\n    }, addedToCart ? __jsx(\"button\", {\n      key: id,\n      className: styles.btnAdded\n    }, \"\\u2713\") : __jsx(\"button\", {\n      className: styles.btnAdd,\n      onClick: function onClick() {\n        return addToCart(product);\n      }\n    }, \"+\"))));\n  }))));\n}\n\nexport default AllProduct;","map":null,"metadata":{},"sourceType":"module"}