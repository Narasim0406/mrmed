{"ast":null,"code":"import { combineReducers } from 'redux';\nimport * as types from './types'; // COUNTER REDUCER\n\nvar counterReducer = function counterReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n  var _ref = arguments.length > 1 ? arguments[1] : undefined,\n      type = _ref.type;\n\n  switch (type) {\n    case types.INCREMENT:\n      return state + 1;\n\n    case types.DECREMENT:\n      return state - 1;\n\n    case types.RESET:\n      return 0;\n\n    default:\n      return state;\n  }\n}; // INITIAL TIMER STATE\n\n\nvar initialTimerState = {\n  lastUpdate: 0,\n  light: false\n}; // TIMER REDUCER\n\nvar timerReducer = function timerReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialTimerState;\n\n  var _ref2 = arguments.length > 1 ? arguments[1] : undefined,\n      type = _ref2.type,\n      payload = _ref2.payload;\n\n  switch (type) {\n    case types.TICK:\n      return {\n        lastUpdate: payload.ts,\n        light: !!payload.light\n      };\n\n    default:\n      return state;\n  }\n}; // COMBINED REDUCERS\n\n\nvar reducers = {\n  counter: counterReducer,\n  timer: timerReducer\n};\nexport default combineReducers(reducers);","map":null,"metadata":{},"sourceType":"module"}